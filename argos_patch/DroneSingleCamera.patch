diff --git a/src/plugins/robots/drone/control_interface/ci_drone_cameras_system_sensor.cpp b/src/plugins/robots/drone/control_interface/ci_drone_cameras_system_sensor.cpp
index 8522ca72..4fcc76c3 100644
--- a/src/plugins/robots/drone/control_interface/ci_drone_cameras_system_sensor.cpp
+++ b/src/plugins/robots/drone/control_interface/ci_drone_cameras_system_sensor.cpp
@@ -164,22 +164,13 @@ namespace argos {
       CCI_DroneCamerasSystemSensor::DEFAULT_SENSOR_CONFIGURATION = {
       std::make_pair("arm0",
                      std::make_tuple("origin",
-                                     CVector3( DEFAULT_CAMERA_XY_OFFSET,  DEFAULT_CAMERA_XY_OFFSET, DEFAULT_CAMERA_Z_OFFSET),
-                                     CQuaternion(ToRadians(DEFAULT_CAMERA_ANGLE), CVector3(-1,1,0).Normalize())
-                                        * CQuaternion(CRadians::PI, CVector3::Z))),
-      std::make_pair("arm1",
-                     std::make_tuple("origin",
-                                     CVector3(-DEFAULT_CAMERA_XY_OFFSET,  DEFAULT_CAMERA_XY_OFFSET, DEFAULT_CAMERA_Z_OFFSET),
-                                     CQuaternion(ToRadians(DEFAULT_CAMERA_ANGLE), CVector3(-1,-1,0).Normalize()))),
-      std::make_pair("arm2",
-                     std::make_tuple("origin",
-                                     CVector3(-DEFAULT_CAMERA_XY_OFFSET, -DEFAULT_CAMERA_XY_OFFSET, DEFAULT_CAMERA_Z_OFFSET),
-                                     CQuaternion(ToRadians(DEFAULT_CAMERA_ANGLE), CVector3(1,-1,0).Normalize())
-                                        * CQuaternion(CRadians::PI, CVector3::Z))),
-      std::make_pair("arm3",
-                     std::make_tuple("origin",
-                                     CVector3( DEFAULT_CAMERA_XY_OFFSET, -DEFAULT_CAMERA_XY_OFFSET, DEFAULT_CAMERA_Z_OFFSET),
-                                     CQuaternion(ToRadians(DEFAULT_CAMERA_ANGLE), CVector3(1,1,0).Normalize()))),
+                                     CVector3( DEFAULT_CAMERA_XY_OFFSET,  0, DEFAULT_CAMERA_Z_OFFSET),
+                                     //CQuaternion(ToRadians(DEFAULT_CAMERA_ANGLE), CVector3(-1,1,0).Normalize())
+                                     //   * CQuaternion(CRadians::PI, CVector3::Z))),
+                                     CQuaternion(ToRadians(CDegrees(120)), CVector3(0,1,0).Normalize())
+                                     //   * CQuaternion(CRadians::PI, CVector3::Z))),
+                                    )
+                    )
    };
 
    /****************************************/
diff --git a/src/plugins/robots/drone/simulator/drone_cameras_system_default_sensor.cpp b/src/plugins/robots/drone/simulator/drone_cameras_system_default_sensor.cpp
index 707e423c..04c02d16 100644
--- a/src/plugins/robots/drone/simulator/drone_cameras_system_default_sensor.cpp
+++ b/src/plugins/robots/drone/simulator/drone_cameras_system_default_sensor.cpp
@@ -14,7 +14,7 @@
 #include <argos3/plugins/simulator/media/tag_medium.h>
 
 #define CAMERA_RANGE_MIN 0.001
-#define CAMERA_RANGE_MAX 1.800
+#define CAMERA_RANGE_MAX 120
 
 namespace argos {
 
